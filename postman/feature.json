{
  "info": {
    "_postman_id": "1d6cc254-e6dc-49e8-a5f9-4019a9b372df",
    "name": "feature",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "33879303"
  },
  "item": [
    {	"name": "first user queries",
      "item": [
        {
          "name": "post comment user1 event1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код по статусу 201 и данные добавленного комментария\", () => {",
                  "    pm.response.to.have.status(201);",
                  "    pm.response.to.be.withBody;",
                  "    pm.response.to.be.json;",
                  "    const responseBody = pm.response.json();",
                  "",
                  "",
                  "    pm.expect(responseBody).to.have.property('id');",
                  "    pm.expect(responseBody).to.have.property('content');",
                  "    pm.expect(responseBody).to.have.property('created');",
                  "    pm.expect(responseBody).to.have.property('userName');",
                  "    pm.expect(responseBody).to.have.property('eventId');",
                  "    pm.expect(responseBody.id).to.be.a(\"number\").and.not.be.null;",
                  "    pm.expect(responseBody.content).to.equal(\"Tolles event!\");",
                  "    pm.expect(responseBody.created).not.be.null;",
                  "    pm.expect(responseBody.userName).to.be.a(\"string\").not.be.null;",
                  "    pm.expect(responseBody.eventId).to.be.a(\"number\").not.be.null;",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"content\" : \"Tolles event!\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/1/comments/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "1",
                "comments",
                "1"
              ]
            }
          },
          "response": []
        },

        {
          "name": "post comment user2 event2",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код по статусу 201 и данные добавленного комментария\", () => {",
                  "    pm.response.to.have.status(201);",
                  "    pm.response.to.be.withBody;",
                  "    pm.response.to.be.json;",
                  "    const responseBody = pm.response.json();",
                  "",
                  "",
                  "    pm.expect(responseBody).to.have.property('id');",
                  "    pm.expect(responseBody).to.have.property('content');",
                  "    pm.expect(responseBody).to.have.property('created');",
                  "    pm.expect(responseBody).to.have.property('userName');",
                  "    pm.expect(responseBody).to.have.property('eventId');",
                  "    pm.expect(responseBody.id).to.be.a(\"number\").and.not.be.null;",
                  "    pm.expect(responseBody.content).to.equal(\"Zzzzzzzz event!\");",
                  "    pm.expect(responseBody.created).not.be.null;",
                  "    pm.expect(responseBody.userName).to.be.a(\"string\").not.be.null;",
                  "    pm.expect(responseBody.eventId).to.be.a(\"number\").not.be.null;",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"content\" : \"Zzzzzzzz event!\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/2/comments/2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "2",
                "comments",
                "2"
              ]
            }
          },
          "response": []
        },
        {
          "name": "post comment user3 event2",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код по статусу 201 и данные добавленного комментария\", () => {",
                  "    pm.response.to.have.status(201);",
                  "    pm.response.to.be.withBody;",
                  "    pm.response.to.be.json;",
                  "    const responseBody = pm.response.json();",
                  "",
                  "",
                  "    pm.expect(responseBody).to.have.property('id');",
                  "    pm.expect(responseBody).to.have.property('content');",
                  "    pm.expect(responseBody).to.have.property('created');",
                  "    pm.expect(responseBody).to.have.property('userName');",
                  "    pm.expect(responseBody).to.have.property('eventId');",
                  "    pm.expect(responseBody.id).to.be.a(\"number\").and.not.be.null;",
                  "    pm.expect(responseBody.content).to.equal(\"Awesome event!\");",
                  "    pm.expect(responseBody.created).not.be.null;",
                  "    pm.expect(responseBody.userName).to.be.a(\"string\").not.be.null;",
                  "    pm.expect(responseBody.eventId).to.be.a(\"number\").not.be.null;",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"content\" : \"Awesome event!\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/3/comments/2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "3",
                "comments",
                "2"
              ]
            }
          },
          "response": []
        },
        {
          "name": "update comment2 user2",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код по статусу 201 и данные добавленного комментария\", () => {",
                  "    pm.response.to.be.ok;",
                  "    pm.response.to.be.withBody;",
                  "    pm.response.to.be.json;",
                  "    const responseBody = pm.response.json();",
                  "",
                  "",
                  "    pm.expect(responseBody).to.have.property('id');",
                  "    pm.expect(responseBody).to.have.property('content');",
                  "    pm.expect(responseBody).to.have.property('created');",
                  "    pm.expect(responseBody).to.have.property('userName');",
                  "    pm.expect(responseBody).to.have.property('eventId');",
                  "    pm.expect(responseBody.id).to.be.a(\"number\").and.not.be.null;",
                  "    pm.expect(responseBody.content).to.equal(\"Vini vidi vici\");",
                  "    pm.expect(responseBody.created).not.be.null;",
                  "    pm.expect(responseBody.userName).to.be.a(\"string\").not.be.null;",
                  "    pm.expect(responseBody.eventId).to.be.a(\"number\").not.be.null;",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"content\": \"Vini vidi vici\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/2/comments/2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "2",
                "comments",
                "2"
              ]
            }
          },
          "response": []
        },
        {
          "name": "update error text length short",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен возвращать код статуса 400\", () => {",
                  "   ",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"content\": \"ab\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/2/comments/2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "2",
                "comments",
                "2"
              ]
            }
          },
          "response": []
        },
        {
          "name": "update error  text length > 700",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен возвращать код статуса 400\", () => {",
                  "   ",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"content\" : \"sdfgfnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnndfgdfgdgdfgdfgfdgfdgdgdgdgdgdgdgdgdgdgdgdscqqtlupkwbzryakcwyvofwxrjohkngelmluariwdpyfvilztqahyzyenklwlvyancuclupvxrempctudpsnoutleixwwtfynovhthewchlvdxfkqbxovlihblyzvhdjvauveecbgjaskifwognpnhehfjduksyzaksecqrtttauqpphflsxwvlaxmxytlnpettdlifefegpneuslfwprniqzboplnoggnrwcnsnitsxwvxvgwyneuctpsmdomqigvluitkhobzhzikqxanrjsayrprorhueofafmfoinkepbgjdwrzwlmfjejlvodxpaoqbjbpnwmqnlnrgiiekcidfslfsfyhufxqmvgpubjoiqbfmhpebmzdvlzzsepkeavfcrcjuwvcovlrwqtogjsnxiixhubygvcakiysxeedtwzvwdigvjjuogisrdbmxznkdryuwvqrtcjkjbhanqdoqftkatapnattsjhnbfzirdzlwlvx\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/2/comments/2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "2",
                "comments",
                "2"
              ]
            }
          },
          "response": []
        },
        {
          "name": "update comment length 700",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код по статусу 201 и данные добавленного комментария\", () => {",
                  "    pm.response.to.be.ok;",
                  "    pm.response.to.be.withBody;",
                  "    pm.response.to.be.json;",
                  "    const responseBody = pm.response.json();",
                  "",
                  "",
                  "    pm.expect(responseBody.id).to.be.a(\"number\").and.not.be.null;",
                  "    pm.expect(responseBody.content).to.not.equal(\"Vini vidi vici\");",
                  "    pm.expect(responseBody.created).not.be.null;",
                  "    pm.expect(responseBody.userName).to.be.a(\"string\").not.be.null;",
                  "    pm.expect(responseBody.eventId).to.be.a(\"number\").not.be.null;",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"content\" : \"sscqqtlupkwbzryakcwyvofwxrjohkngelmluariwdpyfvilztqahyzyenklwlvyancuclupvxrempctudpsnoutleixwwtfynovhthewchlvdxfkqbxovlihblyzvhdjvauveecbgjaskifwognpnhehfjduksyzaksecqrtttauqpphflsxwvlaxmxytlnpettdlifefegpneuslfwprniqzboplnoggnrwcnsnitsxwvxvgwyneuctpsmdomqigvluitkhobzhzikqxanrjsayrprorhueofafmfoinkepbgjdwrzwlmfjejlvodxpaoqbjbpnwmqnlnrgiiekcidfslfsfyhufxqmvgpubjoiqbfmhpebmzdvlzzsepkeavfcrcjuwvcovlrwqtogjsnxiixhubygvcakiysxeedtwzvwdigvjjuogisrdbmxznkdryuwvqrtcjkjbhanqdoqftkatapnattsjhnbfzirdzlwlvx\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/2/comments/2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "2",
                "comments",
                "2"
              ]
            }
          },
          "response": []
        },
        {
          "name": "update comment length 3",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код по статусу 201 и данные добавленного комментария\", () => {",
                  "    pm.response.to.be.ok;",
                  "    pm.response.to.be.withBody;",
                  "    pm.response.to.be.json;",
                  "    const responseBody = pm.response.json();",
                  "",
                  "",
                  "    pm.expect(responseBody).to.have.property('id');",
                  "    pm.expect(responseBody).to.have.property('content');",
                  "    pm.expect(responseBody).to.have.property('created');",
                  "    pm.expect(responseBody).to.have.property('userName');",
                  "    pm.expect(responseBody).to.have.property('eventId');",
                  "    pm.expect(responseBody.id).to.be.a(\"number\").and.not.be.null;",
                  "    pm.expect(responseBody.content).to.equal(\"Sup\");",
                  "    pm.expect(responseBody.created).not.be.null;",
                  "    pm.expect(responseBody.userName).to.be.a(\"string\").not.be.null;",
                  "    pm.expect(responseBody.eventId).to.be.a(\"number\").not.be.null;",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"content\" : \"Sup\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/2/comments/2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "2",
                "comments",
                "2"
              ]
            }
          },
          "response": []
        },
        {
          "name": "post comment short user2 event1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен возвращать код статуса 400\", () => {",
                  "   ",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"content\" : \"a\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/2/comments/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "2",
                "comments",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "post comment > 700 user2 comment1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен возвращать код статуса 400\", () => {",
                  "   ",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"content\" : \"sdfgfdfgdfgdgdfgdfgfdgfdgkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkdgdgdgdgdgdgdgdgdgdgdscqqtlupkwbzryakcwyvofwxrjohkngelmluariwdpyfvilztqahyzyenklwlvyancuclupvxrempctudpsnoutleixwwtfynovhthewchlvdxfkqbxovlihblyzvhdjvauveecbgjaskifwognpnhehfjduksyzaksecqrtttauqpphflsxwvlaxmxytlnpettdlifefegpneuslfwprniqzboplnoggnrwcnsnitsxwvxvgwyneuctpsmdomqigvluitkhobzhzikqxanrjsayrprorhueofafmfoinkepbgjdwrzwlmfjejlvodxpaoqbjbpnwmqnlnrgiiekcidfslfsfyhufxqmvgpubjoiqbfmhpebmzdvlzzsepkeavfcrcjuwvcovlrwqtogjsnxiixhubygvcakiysxeedtwzvwdigvjjuogisrdbmxznkdryuwvqrtcjkjbhanqdoqftkatapnattsjhnbfzirdzlwlvx\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/2/comments/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "2",
                "comments",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "post comment user2 event1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код по статусу 201 и данные добавленного комментария\", () => {",
                  "    pm.response.to.have.status(201);",
                  "    pm.response.to.be.withBody;",
                  "    pm.response.to.be.json;",
                  "    const responseBody = pm.response.json();",
                  "",
                  "",
                  "    pm.expect(responseBody).to.have.property('id');",
                  "    pm.expect(responseBody).to.have.property('content');",
                  "    pm.expect(responseBody).to.have.property('created');",
                  "    pm.expect(responseBody).to.have.property('userName');",
                  "    pm.expect(responseBody).to.have.property('eventId');",
                  "    pm.expect(responseBody.id).to.be.a(\"number\").and.not.be.null;",
                  "    pm.expect(responseBody.content).to.equal(\"new comment\");",
                  "    pm.expect(responseBody.created).not.be.null;",
                  "    pm.expect(responseBody.userName).to.be.a(\"string\").not.be.null;",
                  "    pm.expect(responseBody.eventId).to.be.a(\"number\").not.be.null;",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"content\" : \"new comment\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/2/comments/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "2",
                "comments",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "get comment user2 event2",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код по статусу 200 и данные комментария\", () => {",
                  "    pm.response.to.be.ok;",
                  "    pm.response.to.be.withBody;",
                  "    pm.response.to.be.json;",
                  "    const responseBody = pm.response.json();",
                  "",
                  "",
                  "    pm.expect(responseBody).to.have.property('id');",
                  "    pm.expect(responseBody).to.have.property('content');",
                  "    pm.expect(responseBody).to.have.property('created');",
                  "    pm.expect(responseBody).to.have.property('userName');",
                  "    pm.expect(responseBody).to.have.property('eventId');",
                  "    pm.expect(responseBody.id).to.be.a(\"number\").and.not.be.null;",
                  "    pm.expect(responseBody.content).to.equal(\"Sup\");",
                  "    pm.expect(responseBody.created).not.be.null;",
                  "    pm.expect(responseBody.userName).to.be.a(\"string\").not.be.null;",
                  "    pm.expect(responseBody.eventId).to.be.a(\"number\").not.be.null;",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/users/2/comments/2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "2",
                "comments",
                "2"
              ]
            }
          },
          "response": []
        },
        {
          "name": "delete comment user2 event2",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код по статусу 204 и данные удаления комментария\", () => {",
                  "    pm.response.to.be.success;",
                  "",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/users/2/comments/2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "2",
                "comments",
                "2"
              ]
            }
          },
          "response": []
        },
        {
          "name": "delete not existing comment id",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен возвращать код статуса 404\", () => {",
                  "   ",
                  "    pm.response.to.have.status(404);",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/users/2/comments/1000",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "2",
                "comments",
                "1000"
              ]
            }
          },
          "response": []
        },
        {
          "name": "delete comment not existing user",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен возвращать код статуса 404\", () => {",
                  "   ",
                  "    pm.response.to.have.status(404);",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/users/999/comments/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "999",
                "comments",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "post comment user3 event1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код по статусу 201 и данные добавленного комментария\", () => {",
                  "    pm.response.to.have.status(201);",
                  "    pm.response.to.be.withBody;",
                  "    pm.response.to.be.json;",
                  "    const responseBody = pm.response.json();",
                  "",
                  "",
                  "    pm.expect(responseBody).to.have.property('id');",
                  "    pm.expect(responseBody).to.have.property('content');",
                  "    pm.expect(responseBody).to.have.property('created');",
                  "    pm.expect(responseBody).to.have.property('userName');",
                  "    pm.expect(responseBody).to.have.property('eventId');",
                  "    pm.expect(responseBody.id).to.be.a(\"number\").and.not.be.null;",
                  "    pm.expect(responseBody.content).to.equal(\"comment\");",
                  "    pm.expect(responseBody.created).not.be.null;",
                  "    pm.expect(responseBody.userName).to.be.a(\"string\").not.be.null;",
                  "    pm.expect(responseBody.eventId).to.be.a(\"number\").not.be.null;",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"content\" : \"comment\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/3/comments/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "3",
                "comments",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "patch not existing comment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен возвращать код статуса 404\", () => {",
                  "   ",
                  "    pm.response.to.have.status(404);",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"content\" : \"999 comment\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/3/comments/999",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "3",
                "comments",
                "999"
              ]
            }
          },
          "response": []
        },
        {
          "name": "get user3 comments 1v",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен возвращать массив комментариев\", () => {",
                  "            pm.response.to.be.withBody;     ",
                  "            pm.response.to.be.json;",
                  "            ",
                  "            const responseBody = pm.response.json();",
                  "            pm.expect(Array.isArray(responseBody)).to.be.true;",
                  "            pm.expect(responseBody).to.have.lengthOf(2);",
                  "",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/users/3/comments?start=2025-09-01 00:00:00&end=2025-12-31 00:00:00",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "3",
                "comments"
              ],
              "query": [
                {
                  "key": "start",
                  "value": "2025-09-01 00:00:00"
                },
                {
                  "key": "end",
                  "value": "2025-12-31 00:00:00"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "get user3 comments 2v",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен возвращать массив комментариев\", () => {",
                  "            pm.response.to.be.withBody;     ",
                  "            pm.response.to.be.json;",
                  "            ",
                  "            const responseBody = pm.response.json();",
                  "            pm.expect(Array.isArray(responseBody)).to.be.true;",
                  "            pm.expect(responseBody).to.have.lengthOf(2);",
                  "",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/users/3/comments?start=2025-09-01 00:00:00&end=2025-12-31 00:00:00&from=0&size=5",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "3",
                "comments"
              ],
              "query": [
                {
                  "key": "start",
                  "value": "2025-09-01 00:00:00"
                },
                {
                  "key": "end",
                  "value": "2025-12-31 00:00:00"
                },
                {
                  "key": "from",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "5"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "get user3 comments 3v",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен возвращать массив комментариев\", () => {",
                  "            pm.response.to.be.withBody;     ",
                  "            pm.response.to.be.json;",
                  "            ",
                  "            const responseBody = pm.response.json();",
                  "            pm.expect(Array.isArray(responseBody)).to.be.true;",
                  "            pm.expect(responseBody).to.have.lengthOf(1);",
                  "",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/users/3/comments?start=2025-09-01 00:00:00&end=2025-12-31 00:00:00&from=0&size=1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "3",
                "comments"
              ],
              "query": [
                {
                  "key": "start",
                  "value": "2025-09-01 00:00:00"
                },
                {
                  "key": "end",
                  "value": "2025-12-31 00:00:00"
                },
                {
                  "key": "from",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "get user3 comments not found v1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен возвращать массив комментариев\", () => {",
                  "            pm.response.to.be.withBody;     ",
                  "            pm.response.to.be.json;",
                  "            ",
                  "            const responseBody = pm.response.json();",
                  "            pm.expect(Array.isArray(responseBody)).to.be.true;",
                  "            pm.expect(responseBody).to.have.lengthOf(0);",
                  "",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/users/3/comments?start=2026-11-01 00:00:00&end=2026-12-31 00:00:00",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "3",
                "comments"
              ],
              "query": [
                {
                  "key": "start",
                  "value": "2026-11-01 00:00:00"
                },
                {
                  "key": "end",
                  "value": "2026-12-31 00:00:00"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "get comments user not equals author",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен возвращать код статуса 404\", () => {",
                  "   ",
                  "    pm.response.to.have.status(404);",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/users/1/comments/2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "1",
                "comments",
                "2"
              ]
            }
          },
          "response": []
        },
        {
          "name": "get comments without starting date",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен возвращать массив комментариев\", () => {",
                  "            pm.response.to.be.withBody;     ",
                  "            pm.response.to.be.json;",
                  "            ",
                  "            const responseBody = pm.response.json();",
                  "            pm.expect(Array.isArray(responseBody)).to.be.true;",
                  "            pm.expect(responseBody).to.have.lengthOf(2);",
                  "",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/users/3/comments?end=2025-12-31 00:00:00&from=0&size=2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "3",
                "comments"
              ],
              "query": [
                {
                  "key": "end",
                  "value": "2025-12-31 00:00:00"
                },
                {
                  "key": "from",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "2"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "second admin queries",
      "item": [
        {
          "name": "get comment1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код по статусу 200 и данные комментария\", () => {",
                  "    pm.response.to.be.ok;",
                  "    pm.response.to.be.withBody;",
                  "    pm.response.to.be.json;",
                  "    const responseBody = pm.response.json();",
                  "",

                  "",
                  "    pm.expect(responseBody).to.have.property('id');",
                  "    pm.expect(responseBody).to.have.property('content');",
                  "    pm.expect(responseBody).to.have.property('created');",
                  "    pm.expect(responseBody).to.have.property('userName');",
                  "    pm.expect(responseBody).to.have.property('eventId');",
                  "    pm.expect(responseBody.id).to.be.a(\"number\").and.not.be.null;",
                  "    pm.expect(responseBody.content).to.equal(\"Tolles event!\");",
                  "    pm.expect(responseBody.created).not.be.null;",
                  "    pm.expect(responseBody.userName).to.be.a(\"string\").not.be.null;",
                  "    pm.expect(responseBody.eventId).to.be.a(\"number\").not.be.null;",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/admin/comments/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "admin",
                "comments",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "get comment not found",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен возвращать код статуса 404\", () => {",
                  "   ",
                  "    pm.response.to.have.status(404);",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/admin/comments/9999",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "admin",
                "comments",
                "9999"
              ]
            }
          },
          "response": []
        },
        {
          "name": "update comment1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код по статусу 200 и данные комментария\", () => {",
                  "    pm.response.to.be.ok;",
                  "    pm.response.to.be.withBody;",
                  "    pm.response.to.be.json;",
                  "    const responseBody = pm.response.json();",
                  "",
                  "",
                  "    pm.expect(responseBody).to.have.property('id');",
                  "    pm.expect(responseBody).to.have.property('content');",
                  "    pm.expect(responseBody).to.have.property('created');",
                  "    pm.expect(responseBody).to.have.property('userName');",
                  "    pm.expect(responseBody).to.have.property('eventId');",
                  "    pm.expect(responseBody.id).to.be.a(\"number\").and.not.be.null;",
                  "    pm.expect(responseBody.content).to.equal(\"12345\");",
                  "    pm.expect(responseBody.created).not.be.null;",
                  "    pm.expect(responseBody.userName).to.be.a(\"string\").not.be.null;",
                  "    pm.expect(responseBody.eventId).to.be.a(\"number\").not.be.null;",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"content\" : \"12345\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/admin/comments/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "admin",
                "comments",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "update comment < 3",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен возвращать код статуса 400\", () => {",
                  "   ",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"content\" : \"1\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/admin/comments/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "admin",
                "comments",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "update comment > 700",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен возвращать код статуса 400\", () => {",
                  "   ",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"content\" : \"loremsdfgfdfgdfgdgdfgdfgfdgfdgkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkdgdgdgdgdgdgdgdgdgdgdscqqtlupkwbzryakcwyvofwxrjohkngelmluariwdpyfvilztqahyzyenklwlvyancuclupvxrempctudpsnoutleixwwtfynovhthewchlvdxfkqbxovlihblyzvhdjvauveecbgjaskifwognpnhehfjduksyzaksecqrtttauqpphflsxwvlaxmxytlnpettdlifefegpneuslfwprniqzboplnoggnrwcnsnitsxwvxvgwyneuctpsmdomqigvluitkhobzhzikqxanrjsayrprorhueofafmfoinkepbgjdwrzwlmfjejlvodxpaoqbjbpnwmqnlnrgiiekcidfslfsfyhufxqmvgpubjoiqbfmhpebmzdvlzzsepkeavfcrcjuwvcovlrwqtogjsnxiixhubygvcakiysxeedtwzvwdigvjjuogisrdbmxznkdryuwvqrtcjkjbhanqdoqftkatapnattsjhnbfzirdzlwlvx\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/admin/comments/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "admin",
                "comments",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "update comment length 700 admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код по статусу 200 и данные добавленного комментария\", () => {",
                  "    pm.response.to.have.status(200);",
                  "    pm.response.to.be.withBody;",
                  "    pm.response.to.be.json;",
                  "    const responseBody = pm.response.json();",
                  "",
                  "",
                  "    pm.expect(responseBody).to.have.property('id');",
                  "    pm.expect(responseBody).to.have.property('content');",
                  "    pm.expect(responseBody).to.have.property('created');",
                  "    pm.expect(responseBody).to.have.property('userName');",
                  "    pm.expect(responseBody).to.have.property('eventId');",
                  "    pm.expect(responseBody.id).to.be.a(\"number\").and.not.be.null;",
                  "    pm.expect(responseBody.content).to.equal(\"yrkvfjpejovhhbepuabsyeltttnzpcwyknizaxdkxvngxjdxddmglffxctkirezffcxubhnpwroswhsucqptjcdmbbdabzofhnhtikycfudjpnegjaaoxfoxexppdpuwntotslkumtckqlkqkpvhtogdjxtxrwwzjaoexyudqnkcriogdnvvyvrhoveknpoosjnovqdupjadhurwgwbtoqjcezrvwkrpnwbixkbgralkuyogkiiwmgaeefphwncnltewegfvdjqsmzsidewaemtpzaihwfbuhdqiktfctsokwkdsrbvuywmeuancudcuqtpnvaocdpycsqutijbzjnwqrnhrqyziyjorolfqhryrkrhhknijjoqnwwarytvokdisteuywoyfavrmpzwuoexqaimbkzsdpcanhtsmqftaeuqwgsmhydvcwzvehlugbsbqqlocetdgdesdihlohkjwziwhudmwciattarkexeavbizwbauozaqkqslfpmnwaerathpapcjqujczixucfgemnsaxayauogdbafonzlpaqjctzuwzxwjvxkrfdemnayuhtlycipqptrwalsilsxunjatvfrofymtbvvnonxdcpzetuqtgnqssquodgcfgilycwstkxlgmpnpkrsnxyszjyxoxhculctsjnuwnnogwjacpoaqkcwklxyb\");",
                  "    pm.expect(responseBody.created).not.be.null;",
                  "    pm.expect(responseBody.userName).to.be.a(\"string\").not.be.null;",
                  "    pm.expect(responseBody.eventId).to.be.a(\"number\").not.be.null;",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"content\" : \"yrkvfjpejovhhbepuabsyeltttnzpcwyknizaxdkxvngxjdxddmglffxctkirezffcxubhnpwroswhsucqptjcdmbbdabzofhnhtikycfudjpnegjaaoxfoxexppdpuwntotslkumtckqlkqkpvhtogdjxtxrwwzjaoexyudqnkcriogdnvvyvrhoveknpoosjnovqdupjadhurwgwbtoqjcezrvwkrpnwbixkbgralkuyogkiiwmgaeefphwncnltewegfvdjqsmzsidewaemtpzaihwfbuhdqiktfctsokwkdsrbvuywmeuancudcuqtpnvaocdpycsqutijbzjnwqrnhrqyziyjorolfqhryrkrhhknijjoqnwwarytvokdisteuywoyfavrmpzwuoexqaimbkzsdpcanhtsmqftaeuqwgsmhydvcwzvehlugbsbqqlocetdgdesdihlohkjwziwhudmwciattarkexeavbizwbauozaqkqslfpmnwaerathpapcjqujczixucfgemnsaxayauogdbafonzlpaqjctzuwzxwjvxkrfdemnayuhtlycipqptrwalsilsxunjatvfrofymtbvvnonxdcpzetuqtgnqssquodgcfgilycwstkxlgmpnpkrsnxyszjyxoxhculctsjnuwnnogwjacpoaqkcwklxyb\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/admin/comments/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "admin",
                "comments",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "update comment length 3 admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код по статусу 201 и данные добавленного комментария\", () => {",
                  "    pm.response.to.be.ok;",
                  "    pm.response.to.be.withBody;",
                  "    pm.response.to.be.json;",
                  "    const responseBody = pm.response.json();",
                  "",
                  "",
                  "    pm.expect(responseBody).to.have.property('id');",
                  "    pm.expect(responseBody).to.have.property('content');",
                  "    pm.expect(responseBody).to.have.property('created');",
                  "    pm.expect(responseBody).to.have.property('userName');",
                  "    pm.expect(responseBody).to.have.property('eventId');",
                  "    pm.expect(responseBody.id).to.be.a(\"number\").and.not.be.null;",
                  "    pm.expect(responseBody.content).to.equal(\"Super\");",
                  "    pm.expect(responseBody.created).not.be.null;",
                  "    pm.expect(responseBody.userName).to.be.a(\"string\").not.be.null;",
                  "    pm.expect(responseBody.eventId).to.be.a(\"number\").not.be.null;",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"content\" : \"Super\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/admin/comments/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "admin",
                "comments",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "post comment user1 event1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код по статусу 201 и данные добавленного комментария\", () => {",
                  "    pm.response.to.have.status(201);",
                  "    pm.response.to.be.withBody;",
                  "    pm.response.to.be.json;",
                  "    const responseBody = pm.response.json();",
                  "",
                  "",
                  "    pm.expect(responseBody).to.have.property('id');",
                  "    pm.expect(responseBody).to.have.property('content');",
                  "    pm.expect(responseBody).to.have.property('created');",
                  "    pm.expect(responseBody).to.have.property('userName');",
                  "    pm.expect(responseBody).to.have.property('eventId');",
                  "    pm.expect(responseBody.id).to.be.a(\"number\").and.not.be.null;",
                  "    pm.expect(responseBody.content).to.equal(\"Tolles event!\");",
                  "    pm.expect(responseBody.created).not.be.null;",
                  "    pm.expect(responseBody.userName).to.be.a(\"string\").not.be.null;",
                  "    pm.expect(responseBody.eventId).to.be.a(\"number\").not.be.null;",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"content\" : \"Tolles event!\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/4/comments/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "4",
                "comments",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "delete comment user4 event1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код по статусу 204 и данные удаления комментария\", () => {",
                  "    pm.response.to.be.success;",
                  "",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/admin/comments/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "admin",
                "comments",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "delete comment not found",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен возвращать код статуса 404\", () => {",
                  "   ",
                  "    pm.response.to.have.status(404);",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/admin/comments/9999",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "admin",
                "comments",
                "9999"
              ]
            }
          },
          "response": []
        },
        {
          "name": "get comments id 2 1v",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен возвращать массив комментариев\", () => {",
                  "            pm.response.to.be.withBody;     ",
                  "            pm.response.to.be.json;",
                  "            ",
                  "            const responseBody = pm.response.json();",
                  "            pm.expect(Array.isArray(responseBody)).to.be.true;",
                  "            pm.expect(responseBody).to.have.lengthOf(1);",
                  "",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/admin/comments?eventId=2&from=0&size=1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "admin",
                "comments"
              ],
              "query": [
                {
                  "key": "eventId",
                  "value": "2"
                },
                {
                  "key": "from",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "get comments id 2 2v",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен возвращать массив комментариев\", () => {",
                  "            pm.response.to.be.withBody;     ",
                  "            pm.response.to.be.json;",
                  "            ",
                  "            const responseBody = pm.response.json();",
                  "            pm.expect(Array.isArray(responseBody)).to.be.true;",
                  "            pm.expect(responseBody).to.have.lengthOf(1);",
                  "",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/admin/comments?eventId=2&from=0&size=10",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "admin",
                "comments"
              ],
              "query": [
                {
                  "key": "eventId",
                  "value": "2"
                },
                {
                  "key": "from",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "get comment id 2 3v",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен возвращать массив комментариев\", () => {",
                  "            pm.response.to.be.withBody;     ",
                  "            pm.response.to.be.json;",
                  "            ",
                  "            const responseBody = pm.response.json();",
                  "            pm.expect(Array.isArray(responseBody)).to.be.true;",
                  "            pm.expect(responseBody).to.have.lengthOf(1);",
                  "",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/admin/comments?eventId=2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "admin",
                "comments"
              ],
              "query": [
                {
                  "key": "eventId",
                  "value": "2"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "get comment id 2 4v",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен возвращать код статуса 404\", () => {",
                  "   ",
                  "    pm.response.to.have.status(404);",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/admin/comments?eventId=999&from=0&size=10",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "admin",
                "comments"
              ],
              "query": [
                {
                  "key": "eventId",
                  "value": "999"
                },
                {
                  "key": "from",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        }
      ]
    }
  ]
}